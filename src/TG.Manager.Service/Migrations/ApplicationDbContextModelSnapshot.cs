// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TG.Manager.Service.Db;

namespace TG.Manager.Service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TG.Manager.Service.Entities.BattleServer", b =>
                {
                    b.Property<int>("Port")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("port")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid?>("BattleId")
                        .HasColumnType("uuid")
                        .HasColumnName("battle_id");

                    b.Property<string>("DeploymentName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("deployment_name");

                    b.Property<DateTime>("InitializationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("initialization_time");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_update");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.Property<string>("SvcName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("svc_name");

                    b.HasKey("Port")
                        .HasName("pk_battle_servers");

                    b.HasIndex("BattleId")
                        .HasDatabaseName("ix_battle_servers_battle_id");

                    b.ToTable("battle_servers");
                });
#pragma warning restore 612, 618
        }
    }
}
